version: '3.8'

services:


  # Monero Daemon (monerod) - Required for payments
  monerod:
    image: sethsimmons/simple-monerod:latest
    container_name: based-market-monerod
    restart: unless-stopped
    volumes:
      - monerod_data:/home/monero/.bitmonero
    ports:
      - "18080:18080"
      - "18081:18081"
    command: >
      monerod
      --rpc-bind-ip=0.0.0.0
      --rpc-bind-port=18081
      --confirm-external-bind
      --non-interactive
      --testnet
      --log-level=1
      --max-log-file-size=104857600
    networks:
      - based-market-network

  # Monero Wallet RPC - Persistent wallet management
  monero-wallet-rpc:
    image: sethsimmons/simple-monerod:latest
    container_name: based-market-wallet-rpc
    restart: unless-stopped
    depends_on:
      - monerod
    volumes:
      - wallet_data:/home/monero/wallet
    ports:
      - "18083:18083"
    environment:
      - WALLET_PASSWORD=${MONERO_WALLET_PASSWORD:-marketplace123}
    command: >
      sh -c "
      sleep 30 &&
      if [ ! -f /home/monero/wallet/marketplace-wallet ]; then
        echo 'Creating new wallet...' &&
        monero-wallet-cli --testnet --generate-new-wallet /home/monero/wallet/marketplace-wallet --password $$WALLET_PASSWORD --mnemonic-language English --command exit;
      fi &&
      monero-wallet-rpc
      --testnet
      --rpc-bind-ip=0.0.0.0
      --rpc-bind-port=18083
      --wallet-file /home/monero/wallet/marketplace-wallet
      --password $$WALLET_PASSWORD
      --confirm-external-bind
      --disable-rpc-login
      --daemon-address monerod:18081
      --log-level=1
      "
    networks:
      - based-market-network

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: based-market-backend
    restart: unless-stopped
    depends_on:
      - monerod
      - monero-wallet-rpc
    volumes:
      - backend_data:/app/data
      - ./backend:/app/src
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3001
      
      # Storage Configuration - ActivityPub Mode
      - STORAGE_MODE=activitypub
      - DATABASE_URL=file:/app/data/marketplace.db
      
      # ActivityPub Configuration
      - ACTIVITYPUB_DOMAIN=${ACTIVITYPUB_DOMAIN:-localhost:3001}
      - ACTIVITYPUB_BASE_URL=${ACTIVITYPUB_BASE_URL:-http://localhost:3001}
      
      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET:-dev-jwt-secret-change-in-production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
      
      # Monero Configuration
      - MONERO_DAEMON_URL=http://monerod:18081
      - MONERO_WALLET_RPC_URL=http://monero-wallet-rpc:18083
      - MONERO_WALLET_PASSWORD=${MONERO_WALLET_PASSWORD:-marketplace123}
      
      # CORS
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      
      # Development
      - CREATE_SAMPLE_DATA=${CREATE_SAMPLE_DATA:-false}
    networks:
      - based-market-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: based-market-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:3001/api}
      - VITE_ACTIVITYPUB_DOMAIN=${ACTIVITYPUB_DOMAIN:-localhost:3001}
    volumes:
      - ./frontend:/app/src
    networks:
      - based-market-network

  # SQLite Admin - Database admin interface (development only)
  sqlite-web:
    image: coleifer/sqlite-web
    container_name: based-market-sqlite-admin
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "8081:8080"
    volumes:
      - backend_data:/data
    command: sqlite_web -H 0.0.0.0 -x /data/marketplace.db
    networks:
      - based-market-network
    profiles:
      - development

networks:
  based-market-network:
    driver: bridge

volumes:
  # Monero data persistence
  monerod_data:
    driver: local
  wallet_data:
    driver: local
  
  # Backend data (SQLite + QuickDB + ActivityPub files)
  backend_data:
    driver: local 